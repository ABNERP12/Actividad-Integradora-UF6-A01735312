# -*- coding: utf-8 -*-
"""evidencia 1 A01735312.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EpQx7OnZVGM-G5PN4j3xkzloSJYPNJu-

import streamlit as st
import pandas as pd


st.title('Police Incident Reports from 2018 to 2020 in San Francisco')

df = pd.read_csv("Police_Department_Incident_Reports__2018_to_Present.csv")

st.markdown('The data shown below belongs to incident reports in the city of San Francisco, from the year 2018 to 2020, with details from each case such as date, day of the week, police district, neighborhood in which it happened, type of incident in category and subcategory, exact location and resolution.')

mapa=pd.DataFrame()
mapa=mapa.dropna()
st.map(mapa.astype(int))"
"""

import streamlit as st
import pandas as pd
#import numpy as np
#import plotly as px
#import plotly.figure_factory as ff
#from bokeh.plotting import figure
#import matplotlib.pyplot as plt

st.title('Police Incident Reports from 2018 to 2020 in San Francisco')


df = pd.read_csv("Police_Department_Incident_Reports__2018_to_Present.csv")

st.dataframe(df)

st.markdown('The data shown below belongs to incident reports in the city of San Francisco, from the year 2018 to 2020, with details from each case such as date, day of the week, police district, neighborhood in which it happened, type of incident in category and subcategory, exact location and resolution.')

mapa=pd.DataFrame(df['Latitude'], df['Longitude'])
mapa=mapa.dropna()
#st.map(mapa.astype(int))


mapa = pd.DataFrame()
mapa["Incident Date"] = df["Incident Date"]
mapa["Incident Year"] = df["Incident Year"]
mapa["Incident Day of Week"] = df["Incident Day of Week"]
mapa["Incident Category"] = df["Incident Category"]
mapa["Incident Subcategory"] = df["Incident Subcategory"]
mapa["Police District"] = df["Police District"]
mapa["Analysis Neighborhood"] = df["Analysis Neighborhood"]
mapa["Supervisor District"] = df["Supervisor District"]
mapa["lat"] = df["Latitude"]
mapa["lon"] = df["Longitude"]
mapa = mapa.dropna()

# Assign the subset DataFrame to a new variable for further filtering
subset_data2 = mapa

# Assign the subset DataFrame to a new variable for further filtering
subset_data2 = mapa

# Filters
# Use a sidebar for interactive filtering options
with st.sidebar:
    incident_date_input = st.multiselect('Incident Date', mapa['Incident Date'].unique())
    incident_subcategory_input = st.multiselect('Incident Subcategory', mapa['Incident Subcategory'].unique())
    analysis_neighborhood_input = st.multiselect('Analysis Neighborhood', mapa['Analysis Neighborhood'].unique())
    police_district_input = st.multiselect('Police District', mapa['Police District'].unique())
    supervisor_district_input = st.multiselect('Supervisor District', mapa['Supervisor District'].unique())

# Apply the selected filters to the subset DataFrame
subset_data = subset_data2

if len(incident_date_input) > 0:
    subset_data = subset_data2[subset_data2['Incident Date'].isin(incident_date_input)]

if len(incident_subcategory_input) > 0:
    subset_data = subset_data[subset_data['Incident Subcategory'].isin(incident_subcategory_input)]

if len(analysis_neighborhood_input) > 0:
    subset_data = subset_data[subset_data['Analysis Neighborhood'].isin(analysis_neighborhood_input)]

if len(police_district_input) > 0:
    subset_data = subset_data[subset_data['Police District'].isin(police_district_input)]

if len(supervisor_district_input) > 0:
    subset_data = subset_data[subset_data['Supervisor District'].isin(supervisor_district_input)]

# Display the filtered data
subset_data

st.map(subset_data)


import pandas as pd
import matplotlib.pyplot as plt

# Obtener los top 5 delitos
top_5_delitos = df['Incident Subcategory'].value_counts().head(5)

# Crear una gráfica de barras
plt.bar(top_5_delitos.index, top_5_delitos.values)

# Agregar etiquetas y título a la gráfica
plt.xlabel('Delito')
plt.ylabel('Número de delitos')
plt.title('Top 5 delitos en Estados Unidos')

# Mostrar la gráfica
plt.show()


